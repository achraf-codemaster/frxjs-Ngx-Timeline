stages:
  - build
  - push


variables:
  GIT_CLONE_PATH: $CI_BUILDS_DIR
  GIT_CLEAN_FLAGS: none
  GIT_STRATEGY: clone

build:
  stage: build
  script:
    - export NODEJS_HOME=/usr/local/lib/node/nodejs
    - export PATH=$NODEJS_HOME/bin:$PATH
    - export PUPPETEER_SKIP_DOWNLOAD='true'
    - npm install
    - npm run build:prod
    - cp -R /opt/gitlab-runner/builds/_2otdCTZ/dist/ngx-timeline/* /opt/test/ngx-timeline/

  tags:
    - ngxTimeline
  rules:
    - if: $CI_COMMIT_TAG != null && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_COMMIT_TAG != null && $CI_PIPELINE_SOURCE == "merge_request_event"


push:
  stage: push
  script:
    - echo "Building the project..."
    - echo "email $GITLAB_USER_EMAIL"
    - echo "name $GITLAB_USER_NAME"
    - echo "commit message $CI_COMMIT_MESSAGE"
    - echo "commit tag $CI_COMMIT_TAG"
    - echo "commit tag exist $CI_COMMIT_TAG != null"
    - echo "pipeline source $CI_PIPELINE_SOURCE"
    - cd /opt/test/ngx-timeline/
    - git config --global user.email $GITLAB_USER_EMAIL
    - git config --global user.name $GITLAB_USER_NAME
    - git add .
    - git commit -m "$CI_COMMIT_MESSAGE"
    - git tag -a "$CI_COMMIT_TAG" -m "Version $CI_COMMIT_TAG"
    - git push origin main

  tags:
    - ngxTimeline
  rules:
    - if: $CI_COMMIT_TAG != null && $CI_PIPELINE_SOURCE == "push"
    - if: $CI_COMMIT_TAG != null && $CI_PIPELINE_SOURCE == "merge_request_event"
